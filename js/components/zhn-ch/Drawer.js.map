{"version":3,"sources":["../../../src/components/zhn-ch/Drawer.jsx"],"names":["CL","DRAWER_BT","DRAWER_SPAN","DRAWER_SVG","DRAWER","DRAWER_MODAL","S","BT_DRAWER","position","top","right","DRAWER_OFF","transform","pointerEvents","DRAWER_ON","MODAL_OFF","display","opacity","zIndex","transition","MODAL_ON","Drawer","_hTransitionEnd","props","isOpen","_wrapperNode","style","_setBodyOverflowY","document","body","overflowY","_setWrapperStyleToBlock","_refAside","node","_asideNode","_refWrapper","componentDidMount","HAS","TRANSITION","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","render","uiTheme","btStyle","toggleDrawer","children","_asideStyle","uiThemeImpl","toBg","_drawerModalStyle","_onClickWrapper","Component","mapStateToProps","state","sApp","isDrawer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { sApp } from '../../flux/selectors'\r\nimport { toggleDrawer } from '../../flux/app/actions'\r\n\r\nimport uiThemeImpl from '../ui-theme/uiTheme'\r\nimport HAS from '../has'\r\n\r\nconst CL = {\r\n  DRAWER_BT: 'drawer-bt',\r\n  DRAWER_SPAN: 'drawer-span',\r\n  DRAWER_SVG: 'drawer-svg',\r\n  DRAWER: 'drawer',\r\n  DRAWER_MODAL: 'drawer-modal',\r\n};\r\n\r\nconst S = {\r\n  BT_DRAWER: {\r\n    position: 'absolute',\r\n    top: 8,\r\n    right: 18\r\n  },\r\n  DRAWER_OFF: {\r\n    //transform: 'translateX(-264px)',\r\n    transform: 'translateX(264px)',\r\n    pointerEvents: 'none'\r\n  },\r\n  DRAWER_ON: {\r\n    transform: 'translate(0px, 0px)',\r\n  },\r\n  MODAL_OFF: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    zIndex: -1,\r\n    transition: 'opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  },\r\n  MODAL_ON: {\r\n    display: 'block',\r\n    opacity: 1,\r\n    zIndex: 1000,\r\n    transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  }\r\n}\r\n\r\nclass Drawer extends Component {\r\n\r\n  componentDidMount(){\r\n    if (HAS.TRANSITION) {\r\n      this._asideNode.addEventListener('transitionend', this._hTransitionEnd)\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    if (HAS.TRANSITION) {\r\n      this._asideNode.removeEventListener('transitionend', this._hTransitionEnd)\r\n    }\r\n  }\r\n\r\n  _hTransitionEnd = () => {\r\n    if (!this.props.isOpen) {\r\n      this._wrapperNode.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  _setBodyOverflowY = () => {\r\n    const { isOpen } = this.props;\r\n    if (isOpen) {\r\n      document.body.style.overflowY = 'hidden'\r\n    } else {\r\n      document.body.style.overflowY = 'auto'\r\n    }\r\n  }\r\n\r\n  _setWrapperStyleToBlock = () => {\r\n    if (this.props.isOpen && this._wrapperNode) {\r\n      this._wrapperNode.style.display = 'block'\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this._setBodyOverflowY()\r\n  }\r\n\r\n  _refAside = node => this._asideNode = node\r\n  _refWrapper = node => this._wrapperNode = node\r\n\r\n  render(){\r\n    const {\r\n       isOpen,\r\n       uiTheme,\r\n       btStyle,\r\n       toggleDrawer,\r\n       children\r\n     } = this.props\r\n    , _asideStyle = {\r\n        ...(isOpen ? S.DRAWER_ON : S.DRAWER_OFF),\r\n        ...uiThemeImpl.toBg(uiTheme)\r\n      }\r\n    , _drawerModalStyle = isOpen\r\n         ? S.MODAL_ON\r\n         : S.MODAL_OFF\r\n    , _onClickWrapper = isOpen\r\n         ? toggleDrawer\r\n         : void 0;\r\n    this._setWrapperStyleToBlock()\r\n    return [\r\n        <button\r\n          key=\"bt-drawer\"\r\n          className={CL.DRAWER_BT}\r\n          style={{ ...S.BT_DRAWER, ...btStyle }}\r\n          aria-label=\"Open Drawer\"\r\n          onClick={toggleDrawer}\r\n        >\r\n          <span className={CL.DRAWER_SPAN}>\r\n            <svg\r\n               className={CL.DRAWER_SVG}\r\n               focusable=\"false\"\r\n               viewBox=\"0 0 24 24\"\r\n               aria-hidden=\"true\"\r\n            >\r\n              <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\r\n            </svg>\r\n          </span>\r\n        </button>,\r\n        <div\r\n          key=\"wrapper\"\r\n          aria-hidden={!isOpen}\r\n          className={CL.DRAWER_MODAL}\r\n          style={_drawerModalStyle}\r\n          onClick={_onClickWrapper}\r\n        />,\r\n        <aside\r\n          ref={this._refAside}\r\n          key=\"aside\"\r\n          className={CL.DRAWER}\r\n          style={_asideStyle}\r\n         >\r\n           <div ref={this._refWrapper}>\r\n             {children}\r\n           </div>\r\n        </aside>\r\n      ];\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isOpen: sApp.isDrawer(state),\r\n  uiTheme: sApp.uiTheme(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleDrawer\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Drawer)\r\n"],"file":"Drawer.js"}