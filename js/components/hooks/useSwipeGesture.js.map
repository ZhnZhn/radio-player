{"version":3,"sources":["../../../src/components/hooks/useSwipeGesture.js"],"names":["DF_DELTA","_state","fromClientX","_getClientX","event","changedTouches","clientX","_isSwipeGesture","dir","delta","toClientX","useSwipeGesture","onSwipeGesture","onTouchStart","onTouchEnd","HAS","TOUCH"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA,IAAMA,QAAQ,GAAG,EAAjB;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE,KAAK;AADL,CAAf;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,aACGA,KAAK,IAAI,EADZ;AAAA,iCACnBC,cADmB;AAAA,MACnBA,cADmB,oCACJ,EADI;;AAE3B,SAAOA,cAAc,CAAC,CAAD,CAAd,GACHA,cAAc,CAAC,CAAD,CAAd,CAAkBC,OADf,GAEH,KAAK,CAFT;AAGD,CALD;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb;AAAA,SAA2BF,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,GAC/CP,MAAM,CAACC,WAAP,GAAqBQ,SAArB,GAAiCD,KADc,GAE/CC,SAAS,GAAGT,MAAM,CAACC,WAAnB,GAAiCO,KAFb;AAAA,CAAxB;;AAIA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,QAAmD;AAAA,MAAhDC,cAAgD,SAAhDA,cAAgD;AAAA,wBAAhCJ,GAAgC;AAAA,MAAhCA,GAAgC,0BAA5B,GAA4B;AAAA,0BAAvBC,KAAuB;AAAA,MAAvBA,KAAuB,4BAAfT,QAAe;AAEzE,MAAMa,YAAY,GAAG,wBAAY,UAAAT,KAAK,EAAI;AACxCH,IAAAA,MAAM,CAACC,WAAP,GAAqBC,WAAW,CAACC,KAAD,CAAhC;AACD,GAFoB,EAElB,EAFkB;AAGrB;AAHA;AAAA,MAIEU,UAAU,GAAG,wBAAY,UAAAV,KAAK,EAAI;AAClC,QAAIH,MAAM,CAACC,WAAP,IACGK,eAAe,CAACC,GAAD,EAAMC,KAAN,EAAaN,WAAW,CAACC,KAAD,CAAxB,CADtB,EACwD;AACtDQ,MAAAA,cAAc;AACdX,MAAAA,MAAM,CAACC,WAAP,GAAqB,KAAK,CAA1B;AACD;AACF,GANc,EAMZ,EANY,CAJf;AAWA;;AAEA,MAAI,CAACa,gBAAIC,KAAT,EAAgB;AACd,WAAO,KAAK,CAAZ;AACD;;AAED,SAAO;AACLH,IAAAA,YAAY,EAAZA,YADK;AAELC,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID,CAvBD;;eAyBeH,e","sourcesContent":["import { useCallback } from 'react'\r\n\r\nimport HAS from '../has'\r\n\r\nconst DF_DELTA = 30;\r\nconst _state = {\r\n  fromClientX: void 0\r\n};\r\n\r\nconst _getClientX = event => {\r\n  const { changedTouches=[] } = event || {};\r\n  return changedTouches[0]\r\n    ? changedTouches[0].clientX\r\n    : void 0;\r\n};\r\n\r\nconst _isSwipeGesture = (dir, delta, toClientX) => dir === 'L' || dir === 'U'\r\n  ? _state.fromClientX - toClientX > delta\r\n  : toClientX - _state.fromClientX > delta;\r\n\r\nconst useSwipeGesture = ({ onSwipeGesture, dir='L', delta = DF_DELTA }) => {\r\n\r\n  const onTouchStart = useCallback(event => {\r\n    _state.fromClientX = _getClientX(event)\r\n  }, [])\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , onTouchEnd = useCallback(event => {\r\n    if (_state.fromClientX\r\n        && _isSwipeGesture(dir, delta, _getClientX(event))) {\r\n      onSwipeGesture()\r\n      _state.fromClientX = void 0;\r\n    }\r\n  }, []);\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  if (!HAS.TOUCH) {\r\n    return void 0;\r\n  }\r\n\r\n  return {\r\n    onTouchStart,\r\n    onTouchEnd\r\n  };\r\n};\r\n\r\nexport default useSwipeGesture\r\n"],"file":"useSwipeGesture.js"}