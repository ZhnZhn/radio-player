{"version":3,"sources":["../../src/flux/store.js"],"names":["_middlewares","middlewares","_composeEnhancer","compose","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","logger","store","next","action","result","console","group","log","getState","groupEnd","err","push","_getInitialState","_initialState","initialState","rootReducer","applyMiddleware"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AACA;;AAHA;AAKA,IAAMA,YAAY,aACbC,wBADa,CAAlB;;AAIA,IAAIC,gBAAgB,GAAGC,cAAvB;AACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCJ,EAAAA,gBAAgB,GAAGK,MAAM,CAACC,oCAAP,IACbL,cADN;;AAGA,MAAMM,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,WAAI,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM,EAAI;AACxC,YAAIC,MAAJ;;AACA,YAAI;AACFC,UAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EAA6BH,MAA7B;AACAE,UAAAA,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBN,KAAK,CAACO,QAAN,EAAtB;AACAJ,UAAAA,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAb;AACAE,UAAAA,OAAO,CAACE,GAAR,CAAY,OAAZ,EAAqBN,KAAK,CAACO,QAAN,EAArB;AACAH,UAAAA,OAAO,CAACI,QAAR;AACA,iBAAOL,MAAP;AACD,SAPD,CAOE,OAAOM,GAAP,EAAW;AACXL,UAAAA,OAAO,CAACE,GAAR,CAAYG,GAAZ;AACA,iBAAON,MAAP;AACD;AACF,OAb2B;AAAA,KAAR;AAAA,GAApB;;AAcAb,EAAAA,YAAY,CAACoB,IAAb,CAAkBX,MAAlB;AACF;AACD;;;AAGD,IAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAIC,aAAJ;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,SAAOA,aAAa,IAAIC,yBAAxB;AACD,CAdD;;AAgBA,IAAMb,KAAK,GAAG,wBACZc,uBADY,EAEZH,gBAAgB,EAFJ,EAGZnB,gBAAgB,CACduB,qCAAmBzB,YAAnB,CADc,CAHJ,CAAd;eAQeU,K","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\n//import CONF from './appConf'\r\nimport rootReducer from './rootReducer'\r\nimport initialState from './initialState'\r\nimport middlewares from './zh-middleware/middlewares'\r\n\r\nconst _middlewares = [\r\n  ...middlewares\r\n];\r\n\r\nlet _composeEnhancer = compose;\r\n/*eslint-disable no-undef, no-console*/\r\nif (process.env.NODE_ENV === 'development'){\r\n    _composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n       || compose\r\n\r\n    const logger = store => next => action => {\r\n      let result;\r\n      try {\r\n        console.group('dispatching', action)\r\n        console.log('before', store.getState())\r\n        result = next(action)\r\n        console.log('after', store.getState());\r\n        console.groupEnd();\r\n        return result;\r\n      } catch (err){\r\n        console.log(err);\r\n        return result;\r\n      }\r\n    }\r\n    _middlewares.push(logger)\r\n }\r\n /*eslint-enable no-undef, no-console*/\r\n\r\n\r\nconst _getInitialState = () => {\r\n  let _initialState;\r\n  /*\r\n  try {\r\n    const _str = window.localStorage\r\n      .getItem(CONF.STORAGE_KEY);\r\n    if (_str) {\r\n      _initialState = JSON.parse(_str)\r\n    }\r\n  } catch(e) {\r\n     console.log(e.msg)\r\n  }\r\n  */\r\n  return _initialState || initialState;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  _getInitialState(),\r\n  _composeEnhancer(\r\n    applyMiddleware(..._middlewares)\r\n  )\r\n);\r\n\r\nexport default store\r\n"],"file":"store.js"}