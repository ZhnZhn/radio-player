{"version":3,"sources":["../../src/sound/sound.js"],"names":["_roundTo2","n","parseFloat","toFixed","_sound","INITIAL_CONFIF","volume","autoplay","html5","format","_isFirtsInit","sound","INIT_VOLUME","checkInitVolume","Howler","getVolume","unload","off","init","src","onloaderror","onplayerror","Howl","err","console","log","message","play","stop","setVolume","increaseVolume","delta","decreaseVolume"],"mappings":"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","sourcesContent":["import { Howl, Howler } from 'howler'\r\n\r\nconst _roundTo2 = n => parseFloat(n.toFixed(2))\r\n\r\nlet _sound;\r\n\r\nconst INITIAL_CONFIF = {\r\n    volume: 0.25,\r\n    autoplay: false,\r\n    html5: true,\r\n    format: ['webm', 'mpeg', 'mp3', 'acc'],\r\n    /*\r\n    onloaderror: function(id, err){\r\n      console.log('OnLoad Error')\r\n      console.log(id, err, err.message)\r\n    },\r\n    onplayerror: function(err){\r\n      console.log('OnPlay Error', err.msg)\r\n    }\r\n    */\r\n};\r\n\r\n\r\nlet _isFirtsInit = true;\r\n\r\nconst sound = {\r\n  INIT_VOLUME: 0.2,\r\n  checkInitVolume: () => {\r\n    if (_isFirtsInit) {\r\n      Howler.volume(sound.INIT_VOLUME)\r\n      _isFirtsInit = false\r\n    }\r\n  },\r\n\r\n  getVolume: () => {\r\n    return Howler.volume();\r\n  },\r\n\r\n  unload: () => {\r\n    if (_sound) {\r\n      _sound.unload()\r\n      _sound.off()\r\n    }\r\n  },\r\n\r\n  init: (src, onloaderror, onplayerror) => {\r\n    try {\r\n      sound.checkInitVolume()\r\n      const volume = Howler.volume();\r\n      sound.unload()\r\n\r\n      _sound = new Howl({\r\n        ...INITIAL_CONFIF,\r\n        src,\r\n        onloaderror,\r\n        onplayerror\r\n      })\r\n\r\n      Howler.volume(volume)\r\n\r\n      /*\r\n      console.log(_sound)\r\n      fetch(src).then(res => {\r\n        const _headers = res.headers\r\n        for(let h of _headers.entries()) {\r\n          console.log(h)\r\n        }\r\n        console.log(_headers.get('icy-br'))\r\n        console.log(_headers.get('ICY-BR'))\r\n        console.log(_headers.get('Icy-Br'))\r\n      })\r\n      */\r\n\r\n      /*\r\n      _sound._sounds[0]._node.addEventListener('loadedmetadata', (event)=>{\r\n        console.log(event.mozSampleRate)\r\n        console.log(event)\r\n\r\n        const _audio = _sound._sounds[0]._node\r\n        if (_audio.getMetaData) {\r\n          console.log(_audio.getMetaData())\r\n        } else {\r\n          console.log('getMetaData not supported')\r\n        }\r\n        if (_audio.mozGetMetaData) {\r\n          console.log(_audio.mozGetMetaData())\r\n        } else {\r\n          console.log('mozGetMetaData not supported')\r\n        }\r\n\r\n        console.log('loadedmetadata event')\r\n      })\r\n      _sound._sounds[0]._node.addEventListener('ratechange', event => {\r\n        console.log(event)\r\n        console.log('ratechange event')\r\n      })\r\n      */\r\n\r\n     return true;\r\n   } catch(err) {\r\n     _sound = null;\r\n     console.log(err.message)\r\n     return false;\r\n   }\r\n  },\r\n  play: () => {\r\n    if (_sound) {\r\n      _sound.play()\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  stop: () => {\r\n    if (_sound) {\r\n      _sound.stop()\r\n    }\r\n  },\r\n  setVolume: (volume) => {\r\n    Howler.volume(_roundTo2(volume));\r\n    return volume;\r\n  },\r\n  increaseVolume: (delta=0.05) => {\r\n    sound.checkInitVolume()\r\n    const volume = _roundTo2(Howler.volume()+delta)\r\n    if (volume<=1) {\r\n      Howler.volume(volume)\r\n    }\r\n    return Howler.volume()\r\n  },\r\n  decreaseVolume: (delta=0.05) => {\r\n    sound.checkInitVolume()\r\n    const volume = _roundTo2(Howler.volume()-delta)\r\n    if (volume>=0) {\r\n      Howler.volume(volume)\r\n    }\r\n    return Howler.volume();\r\n  }\r\n}\r\n\r\nexport default sound\r\n"],"file":"sound.js"}